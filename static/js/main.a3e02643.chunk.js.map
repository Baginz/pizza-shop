{"version":3,"sources":["redux/slices/cartSlice.ts","redux/slices/filtersSlice.ts","API/PizzasService.ts","redux/slices/pizzasSlice.ts","redux/store/index.ts","assets/img/empty-cart.png","hooks/useRedux.ts","components/Button.tsx","components/CartItem.tsx","components/Drawer.tsx","assets/img/pizza-logo.svg","components/Header.tsx","components/Layout.tsx","pages/Cart.tsx","components/Categories.tsx","components/PizzaBlock.tsx","components/SortPopup.tsx","hooks/usePizzas.ts","components/LoadingBlock.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["getTotalPrice","arr","reduce","sum","obj","price","getTotalSum","path","Object","values","split","firstKey","val","key","_get","cartSlice","createSlice","name","initialState","items","totalPrice","totalCount","overlayVisible","reducers","addToCart","state","action","currentPizzaItems","payload","id","deleteFromCart","plusCartItem","newObjItems","minusCartItem","length","slice","clearCart","swapOverlayVisible","actions","filtersSlice","category","sortBy","setSortBy","setCategory","PizzasService","axios","get","response","message","fetchPizzas","createAsyncThunk","_","a","rejectWithValue","getAll","data","pizzas","pizzasSlice","status","error","setPizzas","addPizza","push","removePizza","filter","pizza","extraReducers","builder","addCase","pending","fulfilled","rejected","store","configureStore","reducer","filters","cart","useAppDispatch","useDispatch","useAppSelector","useSelector","Button","onClick","className","outline","children","classNames","CartItem","type","size","onRemove","onMinus","onPlus","src","alt","width","height","viewBox","fill","xmlns","d","Drawer","dispatch","addedPizzas","keys","map","onRemoveItem","window","confirm","onPlusItem","onMinusItem","onClickBack","e","stopPropagation","stroke","strokeWidth","strokeLinecap","strokeLinejoin","to","cartEmptyImage","Header","logo","Layout","Cart","console","log","Categories","activeCategory","onClickItem","onClickCategory","index","PizzaBlock","imageUrl","types","sizes","addedCount","onClickAddPizza","React","useState","activeType","setActiveType","activeSize","setActiveSize","avilableTypes","onClickType","active","disabled","includes","onClickSize","SortPopup","memo","activeSortType","onClickSortType","visiblePopup","setVisiblePopup","sortRef","useRef","activeLabel","find","handleOutsideClick","event","composedPath","current","useEffect","document","body","addEventListener","removeEventListener","ref","usePizzas","categoryPizzas","item","useCategoryPizzas","useMemo","sort","b","LoadingBlock","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","categoryNames","sortIems","order","Home","sortedAndCategoryPizzas","handleAddPizzaToCart","Array","App","element","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.a3e02643.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { ICartPizzas } from \"../../interfaces/interfaces\";\r\n\r\n//переделать тут все нормально без эни и иммутабельности\r\ninterface ICartObj {\r\n    [id: string]: { items: ICartPizzas[]; totalPrice: number };\r\n}\r\n\r\ninterface ICartState {\r\n    items: ICartObj;\r\n    totalPrice: number;\r\n    totalCount: number;\r\n    overlayVisible: boolean;\r\n}\r\n\r\nconst initialState: ICartState = {\r\n    items: {},\r\n    totalPrice: 0,\r\n    totalCount: 0,\r\n    overlayVisible: false,\r\n};\r\n\r\nconst getTotalPrice = (arr: ICartPizzas[]) =>\r\n    arr.reduce((sum: number, obj: ICartPizzas) => obj.price + sum, 0);\r\n\r\nconst _get = (obj: any, path: string) => {\r\n    const [firstKey, ...keys] = path.split(\".\");\r\n    return keys.reduce((val, key) => {\r\n        return val[key];\r\n    }, obj[firstKey]);\r\n};\r\n\r\nconst getTotalSum = (obj: ICartObj, path: string) => {\r\n    return Object.values(obj).reduce((sum: number, obj: any) => {\r\n        const value: number = _get(obj, path);\r\n        return sum + value;\r\n    }, 0);\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState,\r\n    reducers: {\r\n        addToCart(state, action: PayloadAction<ICartPizzas>) {\r\n            const currentPizzaItems = !state.items[action.payload.id]\r\n                ? [action.payload]\r\n                : [...state.items[action.payload.id].items, action.payload];\r\n\r\n            state.items[action.payload.id] = {\r\n                items: currentPizzaItems,\r\n                totalPrice: getTotalPrice(currentPizzaItems),\r\n            };\r\n            state.totalCount = getTotalSum(state.items, \"items.length\");\r\n            state.totalPrice = getTotalSum(state.items, \"totalPrice\");\r\n        },\r\n        deleteFromCart(state, action: PayloadAction<number>) {\r\n            delete state.items[action.payload];\r\n            state.totalCount = getTotalSum(state.items, \"items.length\");\r\n            state.totalPrice = getTotalSum(state.items, \"totalPrice\");\r\n        },\r\n        plusCartItem(state, action: PayloadAction<number>) {\r\n            const newObjItems = [\r\n                ...state.items[action.payload].items,\r\n                state.items[action.payload].items[0],\r\n            ];\r\n\r\n            state.items[action.payload] = {\r\n                items: newObjItems,\r\n                totalPrice: getTotalPrice(newObjItems),\r\n            };\r\n            state.totalCount = getTotalSum(state.items, \"items.length\");\r\n            state.totalPrice = getTotalSum(state.items, \"totalPrice\");\r\n        },\r\n        minusCartItem(state, action: PayloadAction<number>) {\r\n            const newObjItems =\r\n                state.items[action.payload].items.length > 1\r\n                    ? state.items[action.payload].items.slice(1)\r\n                    : state.items[action.payload].items;\r\n\r\n            state.items[action.payload] = {\r\n                items: newObjItems,\r\n                totalPrice: getTotalPrice(newObjItems),\r\n            };\r\n            state.totalCount = getTotalSum(state.items, \"items.length\");\r\n            state.totalPrice = getTotalSum(state.items, \"totalPrice\");\r\n        },\r\n        clearCart(state) {\r\n            state.items = {};\r\n            state.totalPrice = 0;\r\n            state.totalCount = 0;\r\n        },\r\n        swapOverlayVisible(state) {\r\n            state.overlayVisible = !state.overlayVisible;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    addToCart,\r\n    deleteFromCart,\r\n    plusCartItem,\r\n    minusCartItem,\r\n    clearCart,\r\n    swapOverlayVisible,\r\n} = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IPizzas } from \"../../interfaces/interfaces\";\r\n\r\ninterface IFiltersState { category: number | null; sortBy: keyof IPizzas };\r\n\r\nconst initialState: IFiltersState = {  category: null, sortBy: \"rating\", };\r\n\r\nconst filtersSlice = createSlice({\r\n    name: \"filters\",\r\n    initialState,\r\n    reducers: {\r\n        setSortBy(state, action: PayloadAction<keyof IPizzas>) {\r\n            state.sortBy = action.payload;\r\n        },\r\n        setCategory(state, action: PayloadAction<number | null>) {\r\n            state.category = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setSortBy, setCategory } = filtersSlice.actions;\r\n\r\nexport default filtersSlice.reducer;\r\n","import axios from \"axios\";\r\nimport { IPizzas } from \"../interfaces/interfaces\";\r\n\r\nexport default class PizzasService {\r\n    static async getAll() {\r\n        try {\r\n            const response = await axios.get<IPizzas[]>('https://baginz.github.io/pizza-shop/db.json')    \r\n            return response;\r\n        } catch (error: any) {\r\n            return error.message;\r\n        }\r\n    }\r\n}","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport PizzasService from \"../../API/PizzasService\";\r\nimport { IPizzas } from \"../../interfaces/interfaces\";\r\n\r\ninterface IPizzasState {\r\n    pizzas: IPizzas[];\r\n    status: string | null;\r\n    error: any;\r\n}\r\n\r\nconst initialState: IPizzasState = {\r\n    pizzas: [],\r\n    status: null,\r\n    error: null,\r\n};\r\n\r\nexport const fetchPizzas = createAsyncThunk(\r\n    \"pizzas/fetchPizzas\",\r\n    async function (_, { rejectWithValue }) {\r\n        try {\r\n            const response = await PizzasService.getAll();\r\n            return response.data.pizzas;\r\n        } catch (e: any) {\r\n            return rejectWithValue(e.message);\r\n        }\r\n    }\r\n);\r\n\r\nconst pizzasSlice = createSlice({\r\n    name: \"pizzas\",\r\n    initialState,\r\n    reducers: {\r\n        setPizzas(state, action) {\r\n            state.pizzas = action.payload;\r\n        },\r\n        addPizza(state, action: PayloadAction<IPizzas>) {\r\n            state.pizzas.push(action.payload);\r\n        },\r\n        removePizza(state, action) {\r\n            state.pizzas = state.pizzas.filter(\r\n                (pizza) => pizza.id !== action.payload.id\r\n            );\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchPizzas.pending, (state) => {\r\n            state.status = \"loading\";\r\n            state.error = null;\r\n        });\r\n        builder.addCase(fetchPizzas.fulfilled, (state, action) => {\r\n            state.status = \"resolved\";\r\n            state.pizzas = action.payload;\r\n        });\r\n        builder.addCase(fetchPizzas.rejected, (state, action) => {\r\n            state.status = \"rejected\";\r\n            state.error = action.payload;\r\n        });\r\n    },\r\n});\r\n\r\nexport const { addPizza, removePizza } = pizzasSlice.actions;\r\n\r\nexport default pizzasSlice.reducer;\r\n\r\n// {\r\n//         [fetchPizzas.pending]: (state) => {\r\n//             state.status = 'loading';\r\n//             state.error = null;\r\n//         },\r\n//         [fetchPizzas.fulfilled]: (state, action) => {\r\n//             state.status = 'resolved';\r\n//             state.pizzas = action.payload;\r\n//         },\r\n//         [fetchPizzas.rejected]: setError,\r\n// },\r\n\r\n// const setError = (state, action) => {\r\n//     state.status = \"rejected\";\r\n//     state.error = action.payload;\r\n// };\r\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport cartSlice from '../slices/cartSlice';\r\nimport filtersSlice from '../slices/filtersSlice';\r\nimport pizzasSlice from '../slices/pizzasSlice';\r\n\r\n// const rootReducer = combineReducers({\r\n//     pizzasSlice,\r\n//     filtersSlice,\r\n//     cartSlice\r\n// })\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        pizzas: pizzasSlice,\r\n        filters: filtersSlice,\r\n        cart: cartSlice,\r\n    }\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;","export default __webpack_public_path__ + \"static/media/empty-cart.db905d1f.png\";","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../redux/store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nconst Button:React.FC<{onClick?: () => void, className: string, outline?: boolean}> = ({ onClick, className, outline, children }) => {\r\n    return (\r\n      <button\r\n        onClick={onClick}\r\n        className={classNames('button', className, {\r\n          'button--outline': outline,\r\n        })}>\r\n        {children}\r\n      </button>\r\n    );\r\n  };\r\n\r\nexport default Button;\r\n\r\n\r\n//className={`button ${outline ? 'button--outline' : ''}`}","import React from 'react';\r\nimport Button from './Button';\r\n\r\ntype CartItemProps = {\r\n  id: number,\r\n  name: string,\r\n  type: string,\r\n  size: number,\r\n  totalPrice: number,\r\n  totalCount: number,\r\n  onRemove: (id: number) => void,\r\n  onMinus: (id: number) => void,\r\n  onPlus: (id: number) => void,\r\n}\r\n\r\nconst CartItem = ({ id, name, type, size, totalPrice, totalCount, onRemove, onMinus, onPlus }: CartItemProps) => {\r\n  const handleRemoveClick = ():void => {\r\n    onRemove(id);\r\n  };\r\n\r\n  const handlePlusItem = ():void => {\r\n    onPlus(id);\r\n  };\r\n\r\n  const handleMinusItem = ():void => {\r\n    onMinus(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart__item\">\r\n      <div className=\"cart__item-img\">\r\n        <img\r\n          className=\"pizza-block__image\"\r\n          src=\"https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg\"\r\n          alt=\"Pizza\"\r\n        />\r\n      </div>\r\n      <div className=\"cart__item-info\">\r\n        <h3>{name}</h3>\r\n        <p>\r\n          {type} тесто, {size} см.\r\n        </p>\r\n      </div>\r\n      <div className=\"cart__item-count\">\r\n        <div\r\n          onClick={handleMinusItem}\r\n          className=\"button button--outline button--circle cart__item-count-minus\">\r\n          <svg\r\n            width=\"10\"\r\n            height=\"10\"\r\n            viewBox=\"0 0 10 10\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n              fill=\"#EB5A1E\"\r\n            />\r\n            <path\r\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n              fill=\"#EB5A1E\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <b>{totalCount}</b>\r\n        <div\r\n          onClick={handlePlusItem}\r\n          className=\"button button--outline button--circle cart__item-count-plus\">\r\n          <svg\r\n            width=\"10\"\r\n            height=\"10\"\r\n            viewBox=\"0 0 10 10\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n              fill=\"#EB5A1E\"\r\n            />\r\n            <path\r\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n              fill=\"#EB5A1E\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div className=\"cart__item-price\">\r\n        <b>{totalPrice} ₽</b>\r\n      </div>\r\n      <div className=\"cart__item-remove\">\r\n        <Button onClick={handleRemoveClick} className=\"button--circle\" outline>\r\n          <svg\r\n            width=\"10\"\r\n            height=\"10\"\r\n            viewBox=\"0 0 10 10\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n              fill=\"#EB5A1E\"\r\n            />\r\n            <path\r\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n              fill=\"#EB5A1E\"\r\n            />\r\n          </svg>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React from \"react\";\r\nimport cartEmptyImage from \"../assets/img/empty-cart.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks/useRedux\";\r\nimport {\r\n    clearCart,\r\n    deleteFromCart,\r\n    minusCartItem,\r\n    plusCartItem,\r\n    swapOverlayVisible,\r\n} from \"../redux/slices/cartSlice\";\r\nimport Button from \"./Button\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nfunction Drawer() {\r\n    const dispatch = useAppDispatch();\r\n    const { totalPrice, totalCount, items, overlayVisible } = useAppSelector(\r\n        (state) => state.cart\r\n    );\r\n\r\n    const addedPizzas = Object.keys(items).map((key: string) => {\r\n        return items[key].items[0];\r\n    });\r\n\r\n    const onClearCart = () => {\r\n        if (window.confirm(\"Вы действительно хотите очистить корзину?\")) {\r\n            dispatch(clearCart());\r\n        }\r\n    };\r\n\r\n    const onRemoveItem = (id: number) => {\r\n        if (window.confirm(\"Вы действительно хотите удалить?\")) {\r\n            dispatch(deleteFromCart(id));\r\n        }\r\n    };\r\n\r\n    const onPlusItem = (id: number) => {\r\n        dispatch(plusCartItem(id));\r\n    };\r\n\r\n    const onMinusItem = (id: number) => {\r\n        dispatch(minusCartItem(id));\r\n    };\r\n\r\n    const onClickBack = () => {\r\n        dispatch(swapOverlayVisible());\r\n    };\r\n\r\n    return (\r\n        <div onClick={onClickBack} className={`overlay ${overlayVisible ? \"overlayVisible\" : \"\"}`}>\r\n            <div onClick={(e) => e.stopPropagation()} className=\"drawer\">\r\n                {totalCount ? (\r\n                    <div className=\"cart\">\r\n                        <div className=\"cart__top\">\r\n                            <h2 className=\"content__title\">\r\n                                <svg\r\n                                    width=\"18\"\r\n                                    height=\"18\"\r\n                                    viewBox=\"0 0 18 18\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <path\r\n                                        d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                        stroke=\"white\"\r\n                                        strokeWidth=\"1.8\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                    <path\r\n                                        d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                        stroke=\"white\"\r\n                                        strokeWidth=\"1.8\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                    <path\r\n                                        d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                        stroke=\"white\"\r\n                                        strokeWidth=\"1.8\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                </svg>\r\n                                Корзина\r\n                            </h2>\r\n                            <div className=\"cart__clear\">\r\n                                <svg\r\n                                    width=\"20\"\r\n                                    height=\"20\"\r\n                                    viewBox=\"0 0 20 20\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <path\r\n                                        d=\"M2.5 5H4.16667H17.5\"\r\n                                        stroke=\"#B6B6B6\"\r\n                                        strokeWidth=\"1.2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                    <path\r\n                                        d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                                        stroke=\"#B6B6B6\"\r\n                                        strokeWidth=\"1.2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                    <path\r\n                                        d=\"M8.33337 9.16667V14.1667\"\r\n                                        stroke=\"#B6B6B6\"\r\n                                        strokeWidth=\"1.2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                    <path\r\n                                        d=\"M11.6666 9.16667V14.1667\"\r\n                                        stroke=\"#B6B6B6\"\r\n                                        strokeWidth=\"1.2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                </svg>\r\n\r\n                                <span onClick={onClearCart}>\r\n                                    Очистить корзину\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"content__items\">\r\n                            {addedPizzas.map((obj) => (\r\n                                <CartItem\r\n                                    key={obj.id}\r\n                                    id={obj.id}\r\n                                    name={obj.name}\r\n                                    type={obj.type}\r\n                                    size={obj.size}\r\n                                    totalPrice={items[obj.id].totalPrice}\r\n                                    totalCount={items[obj.id].items.length}\r\n                                    onRemove={onRemoveItem}\r\n                                    onMinus={onMinusItem}\r\n                                    onPlus={onPlusItem}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"cart__bottom\">\r\n                            <div className=\"cart__bottom-details\">\r\n                                <span>\r\n                                    Всего пицц: <b>{totalCount} шт.</b>\r\n                                </span>\r\n                                <span>\r\n                                    Сумма заказа: <b>{totalPrice} ₽</b>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"cart__bottom-buttons\">\r\n                                <div\r\n                                    onClick={onClickBack}\r\n                                    className=\"button button--outline button--add go-back-btn\"\r\n                                >\r\n                                    <svg\r\n                                        width=\"8\"\r\n                                        height=\"14\"\r\n                                        viewBox=\"0 0 8 14\"\r\n                                        fill=\"none\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    >\r\n                                        <path\r\n                                            d=\"M7 13L1 6.93015L6.86175 1\"\r\n                                            stroke=\"#D3D3D3\"\r\n                                            strokeWidth=\"1.5\"\r\n                                            strokeLinecap=\"round\"\r\n                                            strokeLinejoin=\"round\"\r\n                                        />\r\n                                    </svg>\r\n                                    <span>Свернуть</span>\r\n                                </div>\r\n                                <Link to=\"/cart\">\r\n                                    <Button\r\n                                        onClick={onClickBack}\r\n                                        className=\"pay-btn\"\r\n                                    >\r\n                                        <span>К оформлению</span>\r\n                                    </Button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"cart cart--empty\">\r\n                        <h2>\r\n                            Корзина пустая <i>😕</i>\r\n                        </h2>\r\n                        <p>\r\n                            Вероятней всего, вы не заказывали ещё пиццу.\r\n                            <br />\r\n                            Для того, чтобы заказать пиццу, перейди на главную\r\n                            страницу.\r\n                        </p>\r\n                        <img src={cartEmptyImage} alt=\"Empty cart\" />\r\n                        <div\r\n                            onClick={onClickBack}\r\n                            className=\"button button--black\"\r\n                        >\r\n                            <span>Свернуть</span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Drawer;\r\n","export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../assets/img/pizza-logo.svg\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks/useRedux\";\r\nimport { swapOverlayVisible } from \"../redux/slices/cartSlice\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header: React.FC = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { items, totalPrice, totalCount } = useAppSelector(\r\n        (state) => state.cart\r\n    );\r\n\r\n    const onClickOrder = () => {\r\n        dispatch(swapOverlayVisible());\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\">\r\n                    <div className=\"header__logo\">\r\n                        <img width=\"38\" src={logo} alt=\"Pizza logo\" />\r\n                        <div>\r\n                            <h1>KoKo Pizza</h1>\r\n                            <p>самая вкусная пицца во вселенной</p>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n                <div className=\"header__cart\">\r\n                    <Button onClick={onClickOrder} className=\"button--cart\">\r\n                        <span>{totalPrice} ₽</span>\r\n                        <div className=\"button__delimiter\"></div>\r\n                        <svg\r\n                            width=\"18\"\r\n                            height=\"18\"\r\n                            viewBox=\"0 0 18 18\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                stroke=\"white\"\r\n                                strokeWidth=\"1.8\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                            />\r\n                            <path\r\n                                d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                stroke=\"white\"\r\n                                strokeWidth=\"1.8\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                            />\r\n                            <path\r\n                                d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                stroke=\"white\"\r\n                                strokeWidth=\"1.8\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                            />\r\n                        </svg>\r\n                        {items && <span>{totalCount}</span>}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport Drawer from \"./Drawer\";\r\nimport Header from \"./Header\";\r\n\r\nconst Layout: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Drawer />\r\n            <div className=\"wrapper\">\r\n                <Header />\r\n                <div className=\"content\">\r\n                    <Outlet />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport cartEmptyImage from '../assets/img/empty-cart.png';\r\nimport Button from '../components/Button';\r\nimport CartItem from '../components/CartItem';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\r\n\r\nimport { deleteFromCart, plusCartItem, minusCartItem, clearCart } from '../redux/slices/cartSlice';\r\n\r\nfunction Cart(){\r\n  const dispatch = useAppDispatch();\r\n  const { totalPrice, totalCount, items } = useAppSelector(state => state.cart);\r\n\r\n  const addedPizzas = Object.keys(items).map((key: string) => {\r\n    return items[key].items[0];\r\n  });\r\n\r\n  const onClearCart = () => {\r\n    if (window.confirm('Вы действительно хотите очистить корзину?')) {\r\n      dispatch(clearCart());\r\n    }\r\n  };\r\n\r\n  const onRemoveItem = (id: number) => {\r\n    if (window.confirm('Вы действительно хотите удалить?')) {\r\n      dispatch(deleteFromCart(id));\r\n    }\r\n  };\r\n\r\n  const onPlusItem = (id: number) => {\r\n    dispatch(plusCartItem(id));\r\n  };\r\n\r\n  const onMinusItem = (id: number) => {\r\n    dispatch(minusCartItem(id));\r\n  };\r\n\r\n  const onClickOrder = () => {\r\n    console.log('ВАШ ЗАКАЗ', items);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container container--cart\">\r\n      {totalCount ? (\r\n        <div className=\"cart\">\r\n          <div className=\"cart__top\">\r\n            <h2 className=\"content__title\">\r\n              <svg\r\n                width=\"18\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 18 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"1.8\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"1.8\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"1.8\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n              Корзина\r\n            </h2>\r\n            <div className=\"cart__clear\">\r\n              <svg\r\n                width=\"20\"\r\n                height=\"20\"\r\n                viewBox=\"0 0 20 20\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M2.5 5H4.16667H17.5\"\r\n                  stroke=\"#B6B6B6\"\r\n                  strokeWidth=\"1.2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                  stroke=\"#B6B6B6\"\r\n                  strokeWidth=\"1.2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M8.33337 9.16667V14.1667\"\r\n                  stroke=\"#B6B6B6\"\r\n                  strokeWidth=\"1.2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M11.6666 9.16667V14.1667\"\r\n                  stroke=\"#B6B6B6\"\r\n                  strokeWidth=\"1.2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n\r\n              <span onClick={onClearCart}>Очистить корзину</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"content__items\">\r\n            {addedPizzas.map((obj) => (\r\n              <CartItem\r\n                key={obj.id}\r\n                id={obj.id}\r\n                name={obj.name}\r\n                type={obj.type}\r\n                size={obj.size}\r\n                totalPrice={items[obj.id].totalPrice}\r\n                totalCount={items[obj.id].items.length}\r\n                onRemove={onRemoveItem}\r\n                onMinus={onMinusItem}\r\n                onPlus={onPlusItem}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"cart__bottom\">\r\n            <div className=\"cart__bottom-details\">\r\n              <span>\r\n                Всего пицц: <b>{totalCount} шт.</b>\r\n              </span>\r\n              <span>\r\n                Сумма заказа: <b>{totalPrice} ₽</b>\r\n              </span>\r\n            </div>\r\n            <div className=\"cart__bottom-buttons\">\r\n              <div className=\"button button--outline button--add go-back-btn\">\r\n                <svg\r\n                  width=\"8\"\r\n                  height=\"14\"\r\n                  viewBox=\"0 0 8 14\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path\r\n                    d=\"M7 13L1 6.93015L6.86175 1\"\r\n                    stroke=\"#D3D3D3\"\r\n                    strokeWidth=\"1.5\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                </svg>\r\n                <Link to=\"/\">\r\n                  <span>Вернуться назад</span>\r\n                </Link>\r\n              </div>\r\n              <Button onClick={onClickOrder} className=\"pay-btn\">\r\n                <span>Оплатить сейчас</span>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"cart cart--empty\">\r\n          <h2>\r\n            Корзина пустая <i>😕</i>\r\n          </h2>\r\n          <p>\r\n            Вероятней всего, вы не заказывали ещё пиццу.\r\n            <br />\r\n            Для того, чтобы заказать пиццу, перейди на главную страницу.\r\n          </p>\r\n          <img src={cartEmptyImage} alt=\"Empty cart\" />\r\n          <Link to=\"/\" className=\"button button--black\">\r\n            <span>Вернуться назад</span>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React from 'react'\r\n\r\ntype CategoriesProps = {\r\n  activeCategory: number | null,\r\n  items: string[],\r\n  onClickItem: (index: number | null) => void,\r\n}\r\nconst Categories = ({ activeCategory, items, onClickItem }: CategoriesProps) => {\r\n\r\n  const onClickCategory = (index: number | null):void => {\r\n    onClickItem(index);\r\n  }\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <ul>\r\n        <li\r\n          className={activeCategory === null ? 'active' : ''}\r\n          onClick={() => onClickCategory(null)}>\r\n          Все\r\n        </li>\r\n        {items &&\r\n          items.map((name, index) => (\r\n            <li\r\n              className={activeCategory === index ? 'active' : ''}\r\n              onClick={() => onClickCategory(index)}\r\n              key={`${name}_${index}`}>\r\n              {name}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Categories;\r\n","import React from 'react'\r\nimport classNames from 'classnames'\r\n// import PropTypes from 'prop-types'\r\nimport Button from './Button';\r\nimport { ICartPizzas } from '../interfaces/interfaces';\r\n\r\ninterface PizzaBloCkProps{\r\n    id: number,\r\n    name: string,\r\n    imageUrl: string,\r\n    price: number,\r\n    types: number[],\r\n    sizes: number[],\r\n    addedCount: number,\r\n    onClickAddPizza: (obj: ICartPizzas) => void,\r\n}\r\nconst PizzaBlock = ({ id, name, imageUrl, price, types, sizes, addedCount, onClickAddPizza}: PizzaBloCkProps) => {\r\n\r\n    const [activeType, setActiveType] = React.useState(types[0]);\r\n    const [activeSize, setActiveSize] = React.useState(sizes[0]);\r\n    const avilableTypes = ['тонкое', 'традиционное'];\r\n    const avilableSizes = [26, 30, 40];\r\n\r\n    const onClickType = (index: number) => {\r\n        setActiveType(index);\r\n    }\r\n\r\n    const onClickSize = (index: number) => {\r\n        setActiveSize(index);\r\n    }\r\n\r\n    const onAddPizza = () => {\r\n        const obj = {\r\n          id,\r\n          name,\r\n          imageUrl,\r\n          price,\r\n          size: activeSize,\r\n          type: avilableTypes[activeType],\r\n        };\r\n        onClickAddPizza(obj);\r\n      };\r\n\r\n    return (\r\n        <div className=\"pizza-block\">\r\n            <img\r\n                className=\"pizza-block__image\"\r\n                src={imageUrl}\r\n                alt=\"Pizza\"\r\n                width=\"260\"\r\n                height=\"260\"\r\n            />\r\n            <h4 className=\"pizza-block__title\">\r\n                {name}\r\n            </h4>\r\n            <div className=\"pizza-block__selector\">\r\n                <ul>\r\n                    {avilableTypes.map((type, index) => <li\r\n                        key={`${type}_${index}`}\r\n                        onClick={() => onClickType(index)}\r\n                        className={classNames({ active: activeType === index, disabled: !types.includes(index) })}>\r\n                        {type}\r\n                    </li>)}\r\n                </ul>\r\n                <ul>\r\n                    {avilableSizes.map((size, index) => <li\r\n                        key={`${size}_${index}`}\r\n                        onClick={() => onClickSize(size)}\r\n                        className={classNames({ active: activeSize === size, disabled: !sizes.includes(size) })}>\r\n                        {size} см.\r\n                    </li>)}\r\n                </ul>\r\n            </div>\r\n            <div className=\"pizza-block__bottom\">\r\n                <div className=\"pizza-block__price\">\r\n                    от {price} ₽\r\n                </div>\r\n                <Button onClick={onAddPizza} className=\"button--add\" outline>\r\n                    <svg\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 12 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                    <span>Добавить</span>\r\n                    {addedCount && <i>{addedCount}</i>}\r\n                    </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// PizzaBlock.propTypes = {\r\n//     name: PropTypes.string,\r\n//     imageUrl: PropTypes.string,\r\n//     price: PropTypes.number,\r\n//     types: PropTypes.arrayOf(PropTypes.number),\r\n//     sizes: PropTypes.arrayOf(PropTypes.number),\r\n//     onClickAddPizza: PropTypes.func,\r\n//     addedCount: PropTypes.number,\r\n// };\r\n\r\n// PizzaBlock.defaultProps = {\r\n//     name: '---',\r\n//     price: 0,\r\n//     types: [],\r\n//     sizes: [],\r\n// };\r\n\r\nexport default PizzaBlock;\r\n","import React from 'react';\r\nimport { IPizzas } from '../interfaces/interfaces';\r\n// import PropTypes from 'prop-types';\r\n\r\ntype sortItemsObj = {\r\n  name: string,\r\n  type: keyof IPizzas,\r\n  order: string,\r\n}\r\n\r\ninterface SortPopupProps {\r\n  items: sortItemsObj[],\r\n  activeSortType: string,\r\n  onClickSortType: (type: keyof IPizzas) => void,\r\n}\r\n\r\nconst SortPopup = React.memo(function SortPopup({ items, activeSortType, onClickSortType }: SortPopupProps) {\r\n  const [visiblePopup, setVisiblePopup] = React.useState(false);\r\n  const sortRef = React.useRef<HTMLDivElement>(null);\r\n   // @ts-ignore: Unreachable code error \r\n  const activeLabel = items.find((obj: sortItemsObj) => obj.type === activeSortType).name;\r\n\r\n  const toggleVisiblePopup = () => {\r\n    setVisiblePopup(!visiblePopup);\r\n  };\r\n\r\n  const handleOutsideClick = (event: React.MouseEvent<Element, MouseEvent>) => {\r\n    // @ts-ignore: Unreachable code error \r\n    const path = event.path || (event.composedPath && event.composedPath());\r\n    if (!path.includes(sortRef.current)) {\r\n      setVisiblePopup(false);\r\n    }\r\n  };\r\n\r\n  const onSelectItem = (type: keyof IPizzas) => {\r\n    if (onClickSortType) {\r\n      onClickSortType(type);\r\n    }\r\n    setVisiblePopup(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n     // @ts-ignore: Unreachable code error \r\n    document.body.addEventListener('click', handleOutsideClick);\r\n    return () => {\r\n       // @ts-ignore: Unreachable code error \r\n      document.body.removeEventListener('click', handleOutsideClick);\r\n  };\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={sortRef} className=\"sort\">\r\n      <div className=\"sort__label\">\r\n        <svg\r\n          className={visiblePopup ? 'rotated' : ''}\r\n          width=\"10\"\r\n          height=\"6\"\r\n          viewBox=\"0 0 10 6\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path\r\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n            fill=\"#2C2C2C\"\r\n          />\r\n        </svg>\r\n        <b>Сортировка по:</b>\r\n        <span onClick={toggleVisiblePopup}>{activeLabel}</span>\r\n      </div>\r\n      {visiblePopup && (\r\n        <div className=\"sort__popup\">\r\n          <ul>\r\n            {items &&\r\n              items.map((obj, index) => (\r\n                <li\r\n                  onClick={() => onSelectItem(obj.type)}\r\n                  className={activeSortType === obj.type ? 'active' : ''}\r\n                  key={`${obj.type}_${index}`}>\r\n                  {obj.name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\n// SortPopup.propTypes = {\r\n//   activeSortType: PropTypes.string.isRequired,\r\n//   items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n//   onClickSortType: PropTypes.func.isRequired,\r\n// };\r\n\r\n// SortPopup.defaultProps = {\r\n//   items: [],\r\n// };\r\n\r\nexport default SortPopup;\r\n","import { useMemo } from \"react\";\r\nimport { IPizzas } from \"../interfaces/interfaces\";\r\n\r\nexport const useCategoryPizzas = (pizzas: IPizzas[], category: number | null) => {\r\n    if (category == null) return pizzas;\r\n    const categoryPizzas = [...pizzas].filter(\r\n        (item) => item.category === category\r\n    );\r\n    return categoryPizzas;\r\n};\r\n\r\nexport const usePizzas = (pizzas: IPizzas[], category: number | null, sortBy: keyof IPizzas) => {\r\n    const categoryPizzas = useCategoryPizzas(pizzas, category);\r\n    const sortedAndCategoryPizzas = useMemo(() => {\r\n        if(categoryPizzas.length !== 0){\r\n         \r\n            return [...categoryPizzas].sort((a, b) => a[sortBy] < b[sortBy] ? 1 : -1);\r\n        }\r\n        return categoryPizzas;\r\n    }, [sortBy, categoryPizzas]);\r\n\r\n    return sortedAndCategoryPizzas;\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst LoadingBlock:React.FC = () => {\r\n  return (\r\n    <ContentLoader\r\n      className=\"pizza-block\"\r\n      speed={2}\r\n      width={280}\r\n      height={460}\r\n      viewBox=\"0 0 280 460\"\r\n      backgroundColor=\"#f3f3f3\"\r\n      foregroundColor=\"#ecebeb\">\r\n      <circle cx=\"132\" cy=\"142\" r=\"115\" />\r\n      <rect x=\"0\" y=\"273\" rx=\"6\" ry=\"6\" width=\"280\" height=\"26\" />\r\n      <rect x=\"0\" y=\"310\" rx=\"6\" ry=\"6\" width=\"280\" height=\"84\" />\r\n      <rect x=\"0\" y=\"418\" rx=\"6\" ry=\"6\" width=\"91\" height=\"31\" />\r\n      <rect x=\"137\" y=\"408\" rx=\"25\" ry=\"25\" width=\"140\" height=\"46\" />\r\n    </ContentLoader>\r\n  );\r\n}\r\n\r\nexport default LoadingBlock;\r\n","import React from 'react'\r\nimport Categories from \"../components/Categories\";\r\nimport PizzaBlock from '../components/PizzaBlock';\r\nimport SortPopup from \"../components/SortPopup\";\r\n\r\nimport { usePizzas } from \"../hooks/usePizzas\";\r\nimport { setSortBy, setCategory } from \"../redux/slices/filtersSlice\";\r\nimport {addToCart} from '../redux/slices/cartSlice'\r\nimport LoadingBlock from '../components/LoadingBlock';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/useRedux';\r\nimport { ICartPizzas, IPizzas } from '../interfaces/interfaces';\r\n\r\ntype sortItemsObj = {\r\n    name: string,\r\n    type: keyof IPizzas,\r\n    order: string,\r\n}\r\n\r\nconst categoryNames: string[] = [\r\n    \"Мясные\",\r\n    \"Вегетарианская\",\r\n    \"Гриль\",\r\n    \"Острые\",\r\n    \"Закрытые\",\r\n];\r\nconst sortIems: sortItemsObj[] = [\r\n    { name: 'популярности', type: 'rating', order: 'desc' },\r\n    { name: 'цене', type: 'price', order: 'desc' },\r\n    { name: 'названию', type: 'name', order: 'asc' },\r\n];\r\n\r\n\r\nconst Home:React.FC = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { pizzas, status, error } = useAppSelector(state => state.pizzas);\r\n    const { category, sortBy } = useAppSelector(state => state.filters);\r\n    const { items } = useAppSelector(state => state.cart);\r\n    const sortedAndCategoryPizzas = usePizzas(pizzas, category, sortBy);\r\n\r\n    const onSelectCategory = (index: number | null) => {\r\n        dispatch(setCategory(index));\r\n    }\r\n\r\n    const onSelectSortType = (type: keyof IPizzas) => {\r\n        dispatch(setSortBy(type));\r\n    }\r\n\r\n    const handleAddPizzaToCart = (obj: ICartPizzas) => {\r\n        dispatch(addToCart(obj));\r\n      };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content__top\">\r\n                <Categories\r\n                    activeCategory={category}\r\n                    onClickItem={onSelectCategory}\r\n                    items={categoryNames}\r\n                />\r\n                <SortPopup\r\n                    activeSortType={sortBy}\r\n                    items={sortIems}\r\n                    onClickSortType={onSelectSortType}\r\n                />\r\n            </div>\r\n            <h2 className=\"content__title\">Все пиццы</h2>\r\n            <div className=\"content__items\">\r\n                {error && <h2>An error occured: {error}</h2>}\r\n                {status !== 'loading'\r\n                    ? sortedAndCategoryPizzas && sortedAndCategoryPizzas.map((obj: IPizzas) => (\r\n                        <PizzaBlock\r\n                            key={obj.id}\r\n                            addedCount={items[obj.id] && items[obj.id].items.length} {...obj}\r\n                            onClickAddPizza={handleAddPizzaToCart}\r\n                        />))\r\n                    : Array(12)\r\n                        .fill(0)\r\n                        .map((_, index) => <LoadingBlock key={index} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\n\r\nimport Layout from \"./components/Layout\";\r\nimport Cart from \"./pages/Cart\";\r\nimport Home from \"./pages/Home\";\r\nimport { fetchPizzas } from \"./redux/slices/pizzasSlice\";\r\nimport { useAppDispatch } from \"./hooks/useRedux\";\r\n\r\n\r\nfunction App() {\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchPizzas())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={<Layout />}>\r\n                <Route index element={<Home />} />\r\n                <Route path=\"home\" element={<Home />} />\r\n                <Route path=\"cart\" element={<Cart />} />\r\n            </Route>\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./redux/store\";\r\nimport \"./scss/app.scss\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename='/pizza-shop'>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}